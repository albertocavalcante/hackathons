name: 'Terraform Plan'

on:
  pull_request:
    paths:
      - '2025-06-29-modular-hack-weekend/infrastructure/**'
      - '.github/workflows/terraform-*.yml'

defaults:
  run:
    working-directory: '2025-06-29-modular-hack-weekend/infrastructure'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "~1.0"
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: latest

    - name: Initialize TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -no-color -out=tfplan
        terraform show -no-color tfplan > plan_output.txt
      env:
        LAMBDALABS_API_KEY: ${{ secrets.LAMBDALABS_API_KEY }}

    - name: Comment Plan
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const plan = fs.readFileSync('2025-06-29-modular-hack-weekend/infrastructure/plan_output.txt', 'utf8');
          const maxGitHubBodyCharacters = 65536;
          
          function chunkSubstr(str, size) {
            const numChunks = Math.ceil(str.length / size)
            const chunks = new Array(numChunks)
            for (let i = 0, o = 0; i < numChunks; ++i, o += size) {
              chunks[i] = str.substring(o, o + size)
            }
            return chunks
          }
          
          const planChunks = chunkSubstr(plan, maxGitHubBodyCharacters); 
          
          for (let i = 0; i < planChunks.length; i++) {
            const output = `### üèóÔ∏è Terraform Plan Output (Part ${i + 1}/${planChunks.length})
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${planChunks[i]}
            \`\`\`
            
            </details>
            
            üí∞ **Cost Reminder**: A10 GPU = $0.75/hour, RTX 6000 = $0.50/hour, A100 = $1.10/hour
            ‚ö†Ô∏è **Action Required**: Review plan and approve PR for deployment
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
          }